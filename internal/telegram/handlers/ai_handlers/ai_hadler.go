package ai_handlers

import (
	"game_mill_ai_bot/internal/ai"
	"game_mill_ai_bot/internal/config"
	"game_mill_ai_bot/internal/db/repository/r_user"
	"gopkg.in/telebot.v3"
	"strconv"
	"strings"
)

func AiHendler(c telebot.Context) error {
	message := c.Message()
	prompt := strings.TrimSpace(message.Payload)

	if c.Chat().Type != telebot.ChatSuperGroup {
		return c.Reply("–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–∞—Ö")
	}
	if message.ThreadID == 0 {
		return c.Reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É –≤ —Ç–æ–ø–∏–∫–µ")
	}
	if prompt == "" {
		return c.Reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ –∑–∞–ø—Ä–æ—Å –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n`/ai –ß—Ç–æ —Ç–∞–∫–æ–µ —á–µ—Ä–Ω–∞—è –¥—ã—Ä–∞?`", &telebot.SendOptions{ParseMode: telebot.ModeMarkdown})
	}

	// –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	userId := strconv.FormatInt(c.Sender().ID, 10)

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è
	exists, err := r_user.UserExists(userId)
	if err != nil {
		return c.Reply("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
	}
	if !exists {
		return c.Reply("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ. –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–æ–±–∞–≤–∏—Ç—å –≤–∞—Å.")
	}

	// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	user, err := r_user.GetUserById(userId)
	if err != nil {
		return c.Reply("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
	}

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞
	if user.Cloudlets <= 0 {
		return c.Reply("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ–±–ª–∞—á–∫–æ–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ò–ò üòî")
	}

	// –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
	sendOpts := &telebot.SendOptions{
		ThreadID:  message.ThreadID,
		ParseMode: telebot.ModeMarkdown,
	}
	c.Send("–î—É–º–∞—é...", sendOpts)

	// –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ò–ò
	reply, err := ai.GetChatResponse(config.AiClient, prompt)
	if err != nil {
		return c.Reply("–ò–ò –Ω–µ —Å–º–æ–≥–ª–∞ –æ—Ç–≤–µ—Ç–∏—Ç—å")
	}

	// –°–ø–∏—Å–∞–Ω–∏–µ 1 –æ–±–ª–∞—á–∫–∞
	user.Cloudlets -= 1
	err = r_user.UpdateUser(user)
	if err != nil {
		return c.Reply("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", sendOpts)
	}

	return c.Send(reply, sendOpts)
}
